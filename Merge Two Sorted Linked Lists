# Solution 1
class ListNode(object):
     def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        dummy = cur = ListNode(0)
        while list1 and list2:
            if list1.val < list2.val:
                cur.next = list1
                list1 = list1.next
            else:
                cur.next = list2
                list2 = list2.next
            cur = cur.next
        cur.next = list1 or list2
        return dummy.next
        if not list2:
            s.next = list1
        self.head = new_head     
        return self.head.next
      
#Solution 2
class ListNode(object):
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution(object):
    def mergeTwoLists(self, list1, list2):
        """
        :type list1: Optional[ListNode]
        :type list2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        if not list1:
            return list2
        if not list2:
            return list1
        if list1 and list2:
            if list1.val <= list2.val:
                s = list1 
                list1 = s.next
            else:
                s = list2
                list2 = s.next
            new_head = s 
        while list1 and list2:
            if list1.val <= list2.val:
                s.next = list1 
                s = list1
                list1 = s.next
            else:
                s.next = list2
                s = list2
                list2 = s.next
        if not list2:
            s.next = list2
        if not list2:
            s.next = list1
        self.head = new_head     
        return self.head.next
