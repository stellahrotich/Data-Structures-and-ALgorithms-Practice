"""Given the sorted rotated array nums of unique elements, return the minimum element of this array.
t write an algorithm that runs in O(log n) time."""
class Solution:
    def findMin(self, nums):
        return min(nums)

class Solution:
    def findMin(self, nums):
        low=0
        high=len(nums)-1
        while low<high:
            mid=low+(high-low)//2
            if nums[mid]>nums[-1]:
                low=mid+1
            else:
                high=mid
        return nums[low]

class Solution:
    def findMin(self, nums):
        res = nums[0]
        left, right = 0, len(nums)-1
        while left <= right:
            if nums[left] < nums[right]:
                res = min(res, nums[left])
                break
            m = (left + right) // 2
            res = min(res, nums[m])
            if nums[m] >= nums[l]:
                left = m + 1
            else:
                right = m - 1
        return res
